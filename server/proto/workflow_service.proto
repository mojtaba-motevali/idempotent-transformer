// version of protocol buffer used
syntax = "proto3";

// package name for the buffer will be used later
package workflow_service;

// service which can be executed
service WorkflowServiceImpl {
// function which can be called
    rpc checkpoint(CheckPointRequest) returns (CheckPointResponse);
    rpc get_checkpoint(GetCheckpointsRequest) returns (GetCheckpointsResponse);
    rpc get_checkpoints_by_workflow_id(GetCheckpointsByWorkflowIdRequest) returns (GetCheckpointsByWorkflowIdResponse);
    rpc complete_workflow(CompleteWorkflowRequest) returns (CompleteWorkflowResponse);
}

// argument
message CheckPointRequest {
// data type and position of data
    string workflowId = 1;
    int64 executionOrder = 2;
    bytes value = 3;
}

// return value
message CheckPointResponse {}


message GetCheckpointsRequest {
    string workflowId = 1;
    int64 executionOrder = 2;
}

message GetCheckpointsResponse {
    bytes value = 1;
}

message GetCheckpointsByWorkflowIdRequest {
    string workflowId = 1;
}

message Checkpoint {
    int64 executionOrder = 1;
    bytes value = 2;
}


message GetCheckpointsByWorkflowIdResponse {
    repeated Checkpoint checkpoints = 1;
}

message CompleteWorkflowRequest {
    string workflowId = 1;
    int64 expireAt = 2;
}

message CompleteWorkflowResponse {}