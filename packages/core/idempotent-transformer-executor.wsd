@startuml

Caller -> Transformed_Func: Execute a task

Transformed_Func -> Serialize_Module: Serialize Workflow_ID/Context_Name
Serialize_Module -> Transformed_Func: Serialized Result


Transformed_Func -> Crypto_Module: Form task_id by hashing workflow_ID and Context_Name
Crypto_Module -> Transformed_Func: Hash Result


Transformed_Func -> State_Store_Module: Check if there is a State Data with generated task_id 
State_Store_Module -> Transformed_Func: Return cached State Data if found

== State Found ==

Transformed_Func -> Compression_Module: Decompress State Data if compressd
Compression_Module -> Transformed_Func: Decompressed Value returned

Transformed_Func -> Serialize_Module: Deserialize found State Data
Serialize_Module -> Transformed_Func: Return Deserialized State Data
Transformed_Func -> Caller: Return the State Data

== State Not Found ==

Transformed_Func -> Transformed_Func: Execute the given task

Transformed_Func -> Serialize_Module: Serialize result as Data State

Serialize_Module -> Transformed_Func: Return serialized Data State

Transformed_Func -> Compression_Module: Optionally Compress State Data 

Compression_Module -> Transformed_Func: Return compressed State Data 

Transformed_Func -> State_Store_Module: Store the State Data under task_id 

Transformed_Func -> Caller: Return the State Data


@enduml
